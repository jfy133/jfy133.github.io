<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bootstrap_values | Dr. James A. Fellows Yates</title>
    <link>https://jfy133.github.com/tag/bootstrap_values/</link>
      <atom:link href="https://jfy133.github.com/tag/bootstrap_values/index.xml" rel="self" type="application/rss+xml" />
    <description>bootstrap_values</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-gb</language><copyright>Â© 2021 Dr. James A. Fellows Yates</copyright><lastBuildDate>Tue, 18 Jun 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jfy133.github.com/media/icon_hub6dbd972940fdff31c6d4775500fc8c9_20277_512x512_fill_lanczos_center_3.png</url>
      <title>bootstrap_values</title>
      <link>https://jfy133.github.com/tag/bootstrap_values/</link>
    </image>
    
    <item>
      <title>pvclust Node Values In ggtree</title>
      <link>https://jfy133.github.com/post/2019-06-18-pvclust-nodevalues-in-ggtree/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://jfy133.github.com/post/2019-06-18-pvclust-nodevalues-in-ggtree/</guid>
      <description>&lt;p&gt;I recently was using the R package &lt;a href=&#34;http://stat.sys.i.kyoto-u.ac.jp/prog/pvclust/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;pvclust&lt;/code&gt;&lt;/a&gt; to test the
&amp;lsquo;robusticity&amp;rsquo; of clusters in a microbiome-related clustering analysis. While &lt;code&gt;pvclust&lt;/code&gt; provides it&amp;rsquo;s own plots via &lt;code&gt;plot()&lt;/code&gt;  on a &lt;code&gt;pvclust&lt;/code&gt; object, this plots the dendrogram in  base R. For readability and customisability reasons I prefer using the packages &lt;code&gt;ggplot2&lt;/code&gt; and &lt;code&gt;ggtree&lt;/code&gt; for making my figures. However, I was having a hard time to extract the node uncertainty values from the &lt;code&gt;pvclust&lt;/code&gt; object  and integrate them into a generic R &lt;code&gt;phylo&lt;/code&gt; object for plotting the dendrogram in ggtree.&lt;/p&gt;
&lt;p&gt;Fortunately, a bit of googling (a couple of days&amp;hellip;) showed me someone else had already solved the problem of transferring additional &lt;code&gt;hclust&lt;/code&gt; information into a &lt;code&gt;phylo&lt;/code&gt; object but in a different context. The &lt;code&gt;fastbap&lt;/code&gt; package has the function &lt;a href=&#34;https://github.com/gtonkinhill/fastbaps/blob/master/R/as.phylo.hclust.node.attributes.R&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;as.phylo.hclust.node.attributes()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;which essentially does what I needed to do - i.e. when calculating the node numbers from each merge event, also store with the same node number the corresponding attribute, or in this case,&lt;/code&gt;pvclust` AU value.&lt;/p&gt;
&lt;p&gt;I then modified this function slightly to make it more consistent with how &lt;code&gt;pvclust&lt;/code&gt; will display the values in the base R plot (rounding and converting to a &amp;lsquo;percentage&amp;rsquo;). Note that this outputs in the &lt;code&gt;phylo&lt;/code&gt; object the metadata &lt;code&gt;node.label&lt;/code&gt;, not as &lt;code&gt;node.attributes&lt;/code&gt; as in the original &lt;code&gt;fastbaps&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;So in summary:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## 1. Make pvclust object e.g.
hclust_boot &amp;lt;- pvclust::pvclust(otu_matrix,
                 method.hclust = selected_method,
                 method.dist = &amp;quot;euclidean&amp;quot;,
                 nboot = 1000,
                 parallel = T)

## 2. Set modified fastbaps function
as.phylo.pvclust.node.attributes &amp;lt;- function(x, attribute)
{
  N &amp;lt;- dim(x$merge)[1]
  edge &amp;lt;- matrix(0L, 2*N, 2)
  edge.length &amp;lt;- numeric(2*N)
  ## `node&#39; gives the number of the node for the i-th row of x$merge
  node &amp;lt;- integer(N)
  node[N] &amp;lt;- N + 2L
  node.attributes &amp;lt;- rep(NA, N)
  cur.nod &amp;lt;- N + 3L
  j &amp;lt;- 1L
  for (i in N:1) {
    edge[j:(j + 1), 1] &amp;lt;- node[i]
    for (l in 1:2) {
      k &amp;lt;- j + l - 1L
      y &amp;lt;- x$merge[i, l]
      if (y &amp;gt; 0) {
        edge[k, 2] &amp;lt;- node[y] &amp;lt;- cur.nod
        cur.nod &amp;lt;- cur.nod + 1L
        edge.length[k] &amp;lt;- x$height[i] - x$height[y]
        node.attributes[edge[k, 1] - (N + 1)] &amp;lt;- attribute[i]
      } else {
        edge[k, 2] &amp;lt;- -y
        edge.length[k] &amp;lt;- x$height[i]
        node.attributes[edge[k, 1] -  (N + 1)] &amp;lt;- attribute[i]
      }
    }
    j &amp;lt;- j + 2L
  }

  if (is.null(x$labels))
    x$labels &amp;lt;- as.character(1:(N + 1))
  
  ## MODIFICATION: clean up node.attributes so they are in same format in 
  ## pvclust plots
  node.attributes &amp;lt;- as.character(round(node.attributes * 100, 0))
  node.attributes[1] &amp;lt;- NA
  
  obj &amp;lt;- list(edge = edge, edge.length = edge.length / 2,
              tip.label = x$labels, Nnode = N, node.label = node.attributes)
  class(obj) &amp;lt;- &amp;quot;phylo&amp;quot;
  stats::reorder(obj)
}

## 3. Use the modified fastbaps function by accessing the hclust object in first 
## position, and the corresponding au values from the edges list entry.
hclust_boot_phylo &amp;lt;- as.phylo.pvclust.node.attributes(hclust_boot$hclust, 
                                                     hclust_boot$edges$au)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To display the values on the tree with &lt;code&gt;ggtree&lt;/code&gt; you can then run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggtree(hclust_boot_phylo  aes(x, y)) +
    geom_text2(aes(subset = !isTip, label = label)) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;as described in the &lt;code&gt;ggtree&lt;/code&gt; &lt;a href=&#34;https://guangchuangyu.github.io/software/ggtree/faq/#&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FAQ&lt;/a&gt; under the section &amp;ldquo;bootstrap values from newick format&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
